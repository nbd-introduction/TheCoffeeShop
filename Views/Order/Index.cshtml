@model List<TheCoffeeShop.Models.Cart>
@{
    ViewData["Title"] = "Xem lại đơn hàng";
    decimal totalAmount = Model.Sum(item => item.Product?.ProductPrice * item.Quality ?? 0);
}

<div class="order-review-container">
    <div class="order-review-header">
        <h1 class="order-review-title">Xem lại đơn hàng</h1>
        <p class="order-review-subtitle">Vui lòng kiểm tra lại thông tin đơn hàng trước khi xác nhận</p>
    </div>

    <div class="order-review-card">
        <div class="order-summary">
            <h2 class="summary-title">Tóm tắt đơn hàng</h2>

            <div class="order-items">
                @foreach (var item in Model)
                {
                    <div class="order-item">
                        <div class="item-image">
                            <img src="@(string.IsNullOrEmpty(item.Product?.ProductImage) ? "/Content/Images/placeholder.jpg" : item.Product?.ProductImage)"
                                 alt="@item.Product?.ProductName" />
                        </div>
                        <div class="item-details">
                            <h3 class="item-name">@item.Product?.ProductName</h3>
                            <p class="item-price">@string.Format("{0:#,##0} VNĐ", item.Product?.ProductPrice)</p>
                        </div>
                        <div class="item-quantity">
                            <span class="quantity-label">Số lượng:</span>
                            <span class="quantity-value">@item.Quality</span>
                        </div>
                        <div class="item-total">
                            <span class="total-label">Thành tiền:</span>
                            <span class="total-value">@string.Format("{0:#,##0} VNĐ", item.Product?.ProductPrice * item.Quality)</span>
                        </div>
                    </div>
                }
            </div>

            <div class="order-totals">
                <div class="total-row">
                    <span>Tổng tiền hàng:</span>
                    <span>@string.Format("{0:#,##0} VNĐ", totalAmount)</span>
                </div>
                <div class="total-row">
                    <span>Phí vận chuyển:</span>
                    <span>30,000 VNĐ</span>
                </div>
                <div class="total-row grand-total">
                    <span>Tổng thanh toán:</span>
                    <span>@string.Format("{0:#,##0} VNĐ", totalAmount + 30000)</span>
                </div>
            </div>
        </div>

        <div class="order-actions">
            <form asp-action="AdminIndex" asp-asp-controller="Order" method="post">
                <button type="submit" class="btn-confirm">Xác nhận đặt hàng</button>
                <a href="/ShoppingCart" class="btn-back">Quay lại giỏ hàng</a>
            </form>
        </div>
    </div>
</div>

<style>
    :root {
        --primary: #6b4226;
        --primary-dark: #5a371f;
        --secondary: #a67c52;
        --accent: #d4a762;
        --accent-light: #e9d2b3;
        --light: #f9f5f0;
        --dark: #3c2415;
        --bg: #fcfaf7;
        --text: #333333;
        --text-light: #666666;
        --white: #ffffff;
        --border: #e0e0e0;
        --success: #4caf50;
        --success-dark: #388e3c;
    }

    body {
        background-color: var(--bg);
        font-family: 'Poppins', sans-serif;
        color: var(--text);
    }

    .order-review-container {
        max-width: 900px;
        margin: 40px auto;
        padding: 0 20px;
    }

    .order-review-header {
        text-align: center;
        margin-bottom: 30px;
    }

    .order-review-title {
        font-family: 'Playfair Display', serif;
        font-size: 36px;
        color: var(--primary);
        margin-bottom: 10px;
    }

    .order-review-subtitle {
        color: var(--text-light);
        font-size: 16px;
    }

    .order-review-card {
        background-color: var(--white);
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
        overflow: hidden;
    }

    .order-summary {
        padding: 30px;
    }

    .summary-title {
        font-family: 'Playfair Display', serif;
        font-size: 24px;
        color: var(--dark);
        margin-bottom: 25px;
        padding-bottom: 15px;
        border-bottom: 1px solid var(--border);
    }

    .order-items {
        margin-bottom: 30px;
    }

    .order-item {
        display: grid;
        grid-template-columns: 80px 1fr 120px 150px;
        gap: 20px;
        align-items: center;
        padding: 20px 0;
        border-bottom: 1px solid var(--border);
    }

    .item-image {
        width: 80px;
        height: 80px;
        border-radius: 10px;
        overflow: hidden;
    }

        .item-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    .item-name {
        font-size: 18px;
        font-weight: 600;
        color: var(--dark);
        margin-bottom: 5px;
    }

    .item-price {
        color: var(--text-light);
        font-size: 14px;
    }

    .quantity-label, .total-label {
        display: block;
        font-size: 14px;
        color: var(--text-light);
        margin-bottom: 5px;
    }

    .quantity-value, .total-value {
        font-weight: 600;
        color: var(--dark);
    }

    .total-value {
        color: var(--primary);
    }

    .order-totals {
        background-color: var(--light);
        padding: 25px;
        border-radius: 10px;
    }

    .total-row {
        display: flex;
        justify-content: space-between;
        padding: 10px 0;
        font-size: 16px;
    }

    .grand-total {
        margin-top: 10px;
        padding-top: 15px;
        border-top: 2px dashed var(--border);
        font-weight: 700;
        font-size: 20px;
        color: var(--primary);
    }

    .order-actions {
        padding: 30px;
        background-color: var(--light);
        display: flex;
        justify-content: center;
    }

    .btn-confirm, .btn-back {
        display: inline-block;
        padding: 14px 30px;
        border-radius: 50px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
        font-size: 16px;
        text-align: center;
        margin: 0 10px;
    }

    .btn-confirm {
        background: linear-gradient(135deg, var(--success), var(--success-dark));
        color: var(--white);
        box-shadow: 0 5px 15px rgba(76, 175, 80, 0.3);
    }

        .btn-confirm:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(76, 175, 80, 0.4);
        }

    .btn-back {
        background: transparent;
        color: var(--text);
        border: 2px solid var(--text-light);
    }

        .btn-back:hover {
            background-color: var(--text-light);
            color: var(--white);
            transform: translateY(-3px);
        }

   

    }

   

    }
</style>