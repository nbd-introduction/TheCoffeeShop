@model IEnumerable<TheCoffeeShop.Models.Blog>

@{
    ViewData["Title"] = "Bài viết & Blog";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="blog-container">
    <div class="blog-header">
        <h1 class="blog-title">Bài viết & Blog</h1>
        <p class="blog-subtitle">Khám phá những câu chuyện và kiến thức thú vị về cà phê</p>
    </div>

    <div class="blog-actions">
        <div class="search-box">
            <input type="text" id="searchBlog" placeholder="Tìm kiếm bài viết...">
            <button type="button" class="search-btn"><i class="fas fa-search"></i></button>
        </div>
        <div class="action-buttons">
            <div class="view-toggle">
                <button id="gridViewBtn" class="view-btn active" title="Xem dạng lưới">
                    <i class="fas fa-th"></i>
                </button>
                <button id="listViewBtn" class="view-btn" title="Xem dạng danh sách">
                    <i class="fas fa-list"></i>
                </button>
            </div>
            <a href="@Url.Action("Create")" class="btn-create">
                <i class="fas fa-plus"></i> Tạo bài viết mới
            </a>
        </div>
    </div>

    <!-- Grid View -->
    <div id="gridView" class="blog-grid">
        @foreach (var item in Model)
        {
            <div class="blog-card" data-id="@item.BlogId">
                <div class="blog-image">
                    @if (!string.IsNullOrEmpty(item.BlogImage))
                    {
                        <img src="@item.BlogImage" alt="@item.BlogName">
                    }
                    else
                    {
                        <div class="no-image">
                            <i class="fas fa-newspaper"></i>
                        </div>
                    }
                    @if (item.BlogDate.HasValue)
                    {
                        <div class="blog-date-badge">
                            <span class="day">@item.BlogDate.Value.Day</span>
                            <span class="month">@item.BlogDate.Value.ToString("MMM")</span>
                        </div>
                    }
                </div>
                <div class="blog-content">
                    <h2 class="blog-name">@item.BlogName</h2>
                    <div class="blog-meta">
                        @if (item.BlogDate.HasValue)
                        {
                            <span class="blog-date"><i class="far fa-calendar-alt"></i> @item.BlogDate.Value.ToString("dd/MM/yyyy")</span>
                        }
                        @if (item.Account != null)
                        {
                            <span class="blog-author"><i class="far fa-user"></i> @item.Account.UserName</span>
                        }
                        @if (item.Product != null)
                        {
                            <span class="blog-product"><i class="fas fa-coffee"></i> @item.Product.ProductName</span>
                        }
                    </div>
                    <p class="blog-excerpt">
                        @if (!string.IsNullOrEmpty(item.BlogContent))
                        {
                            @(item.BlogContent.Length > 150 ? item.BlogContent.Substring(0, 150) + "..." : item.BlogContent)
                        }
                        else
                        {
                            <span class="no-content">Không có nội dung</span>
                        }
                    </p>
                    <div class="blog-actions-footer">
                        <a href="@Url.Action("Details", new { id = item.BlogId })" class="btn-view">
                            <i class="fas fa-eye"></i> Xem chi tiết
                        </a>
                        <div class="blog-admin-actions">
                            <a href="@Url.Action("Edit", new { id = item.BlogId })" class="btn-edit" title="Chỉnh sửa">
                                <i class="fas fa-edit"></i>
                            </a>
                            <a href="@Url.Action("Delete", new { id = item.BlogId })" class="btn-delete" title="Xóa">
                                <i class="fas fa-trash"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- List View -->
    <div id="listView" class="blog-list" style="display: none;">
        <div class="blog-table-container">
            <table class="blog-table">
                <thead>
                    <tr>
                        <th>Hình ảnh</th>
                        <th>Tiêu đề</th>
                        <th>Ngày đăng</th>
                        <th>Tác giả</th>
                        <th>Sản phẩm</th>
                        <th>Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr data-id="@item.BlogId">
                            <td class="blog-img-cell">
                                @if (!string.IsNullOrEmpty(item.BlogImage))
                                {
                                    <img src="@item.BlogImage" alt="@item.BlogName" class="blog-table-img">
                                }
                                else
                                {
                                    <div class="no-table-img">
                                        <i class="fas fa-newspaper"></i>
                                    </div>
                                }
                            </td>
                            <td class="blog-title-cell">
                                <span class="blog-table-title">@item.BlogName</span>
                                <p class="blog-table-excerpt">
                                    @if (!string.IsNullOrEmpty(item.BlogContent))
                                    {
                                        @(item.BlogContent.Length > 80 ? item.BlogContent.Substring(0, 80) + "..." : item.BlogContent)
                                    }
                                </p>
                            </td>
                            <td>
                                @if (item.BlogDate.HasValue)
                                {
                                    @item.BlogDate.Value.ToString("dd/MM/yyyy")
                                }
                                else
                                {
                                    <span>-</span>
                                }
                            </td>
                            <td>
                                @if (item.Account != null)
                                {
                                    @item.Account.UserName
                                }
                                else
                                {
                                    <span>-</span>
                                }
                            </td>
                            <td>
                                @if (item.Product != null)
                                {
                                    @item.Product.ProductName
                                }
                                else
                                {
                                    <span>-</span>
                                }
                            </td>
                            <td class="blog-actions-cell">
                                <div class="blog-table-actions">
                                    <a href="@Url.Action("Details", new { id = item.BlogId })" class="btn-table-view" title="Xem chi tiết">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a href="@Url.Action("Edit", new { id = item.BlogId })" class="btn-table-edit" title="Chỉnh sửa">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a href="@Url.Action("Delete", new { id = item.BlogId })" class="btn-table-delete" title="Xóa">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="empty-state">
            <div class="empty-icon">
                <i class="fas fa-newspaper"></i>
            </div>
            <h3>Chưa có bài viết nào</h3>
            <p>Hãy bắt đầu tạo bài viết đầu tiên của bạn.</p>
            <a href="@Url.Action("Create")" class="btn-create mt-3">
                <i class="fas fa-plus"></i> Tạo bài viết mới
            </a>
        </div>
    }

    <div class="pagination">
        <button class="pagination-btn" disabled><i class="fas fa-chevron-left"></i></button>
        <div class="pagination-numbers">
            <button class="pagination-number active">1</button>
            <button class="pagination-number">2</button>
            <button class="pagination-number">3</button>
        </div>
        <button class="pagination-btn"><i class="fas fa-chevron-right"></i></button>
    </div>
</div>

<style>
    :root {
        --primary: #6b4226;
        --primary-light: #8c6242;
        --primary-dark: #4e301c;
        --secondary: #a67c52;
        --accent: #d4a762;
        --accent-light: #e9d2b3;
        --success: #4caf50;
        --warning: #ff9800;
        --danger: #f44336;
        --info: #2196f3;
        --dark: #333333;
        --light: #f5f5f5;
        --gray: #757575;
        --gray-light: #e0e0e0;
        --white: #ffffff;
        --shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        --border-radius: 8px;
        --transition: all 0.3s ease;
    }

    body {
        font-family: 'Poppins', sans-serif;
        background-color: #f9f5f0;
        color: var(--dark);
        line-height: 1.6;
    }

    .blog-container {
        max-width: 1200px;
        margin: 40px auto;
        padding: 0 20px;
    }

    .blog-header {
        text-align: center;
        margin-bottom: 40px;
    }

    .blog-title {
        font-size: 36px;
        font-weight: 700;
        color: var(--primary);
        margin-bottom: 10px;
    }

    .blog-subtitle {
        font-size: 18px;
        color: var(--gray);
        max-width: 600px;
        margin: 0 auto;
    }

    .blog-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        flex-wrap: wrap;
        gap: 15px;
    }

    .action-buttons {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .search-box {
        position: relative;
        max-width: 400px;
        width: 100%;
    }

        .search-box input {
            width: 100%;
            padding: 12px 20px;
            padding-right: 50px;
            border: 1px solid var(--gray-light);
            border-radius: 30px;
            font-size: 14px;
            transition: var(--transition);
        }

            .search-box input:focus {
                outline: none;
                border-color: var(--primary);
                box-shadow: 0 0 0 3px rgba(107, 66, 38, 0.1);
            }

    .search-btn {
        position: absolute;
        right: 5px;
        top: 50%;
        transform: translateY(-50%);
        background-color: var(--primary);
        color: white;
        border: none;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: var(--transition);
    }

        .search-btn:hover {
            background-color: var(--primary-dark);
        }

    .view-toggle {
        display: flex;
        gap: 10px;
    }

    .view-btn {
        width: 40px;
        height: 40px;
        border-radius: var(--border-radius);
        border: 1px solid var(--gray-light);
        background-color: var(--white);
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: var(--transition);
    }

        .view-btn.active {
            background-color: var(--primary);
            color: var(--white);
            border-color: var(--primary);
        }

    .btn-create {
        background-color: var(--primary);
        color: white;
        padding: 12px 24px;
        border-radius: 30px;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        font-weight: 500;
        transition: var(--transition);
    }

        .btn-create:hover {
            background-color: var(--primary-dark);
            color: white;
            transform: translateY(-2px);
        }

    /* Grid View */
    .blog-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 30px;
        margin-bottom: 40px;
    }

    .blog-card {
        background-color: white;
        border-radius: var(--border-radius);
        overflow: hidden;
        box-shadow: var(--shadow);
        transition: var(--transition);
        height: 100%;
        display: flex;
        flex-direction: column;
    }

        .blog-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

    .blog-image {
        height: 200px;
        overflow: hidden;
        position: relative;
    }

        .blog-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

    .blog-card:hover .blog-image img {
        transform: scale(1.05);
    }

    .blog-date-badge {
        position: absolute;
        top: 10px;
        left: 10px;
        background-color: var(--primary);
        color: white;
        padding: 8px 12px;
        border-radius: var(--border-radius);
        text-align: center;
        line-height: 1.2;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }

        .blog-date-badge .day {
            font-size: 18px;
            font-weight: 700;
            display: block;
        }

        .blog-date-badge .month {
            font-size: 12px;
            text-transform: uppercase;
        }

    .no-image {
        width: 100%;
        height: 100%;
        background-color: #f5f0e8;
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--gray);
        font-size: 48px;
    }

    .blog-content {
        padding: 20px;
        flex: 1;
        display: flex;
        flex-direction: column;
    }

    .blog-name {
        font-size: 20px;
        font-weight: 600;
        color: var(--primary);
        margin-bottom: 10px;
        line-height: 1.4;
    }

    .blog-meta {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
        margin-bottom: 15px;
        font-size: 14px;
        color: var(--gray);
    }

        .blog-meta span {
            display: flex;
            align-items: center;
            gap: 5px;
        }

    .blog-excerpt {
        color: var(--dark);
        margin-bottom: 20px;
        flex: 1;
    }

    .no-content {
        color: var(--gray);
        font-style: italic;
    }

    .blog-actions-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: auto;
    }

    .btn-view {
        background-color: var(--accent);
        color: var(--primary-dark);
        padding: 8px 16px;
        border-radius: 20px;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 5px;
        font-weight: 500;
        font-size: 14px;
        transition: var(--transition);
    }

        .btn-view:hover {
            background-color: var(--primary);
            color: white;
        }

    .blog-admin-actions {
        display: flex;
        gap: 10px;
    }

    .btn-edit, .btn-delete {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
        transition: var(--transition);
    }

    .btn-edit {
        background-color: rgba(255, 152, 0, 0.1);
        color: var(--warning);
    }

    .btn-delete {
        background-color: rgba(244, 67, 54, 0.1);
        color: var(--danger);
    }

    .btn-edit:hover {
        background-color: var(--warning);
        color: white;
    }

    .btn-delete:hover {
        background-color: var(--danger);
        color: white;
    }

    /* List View */
    .blog-table-container {
        background-color: white;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        overflow: hidden;
        margin-bottom: 40px;
    }

    .blog-table {
        width: 100%;
        border-collapse: collapse;
    }

        .blog-table th, .blog-table td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid var(--gray-light);
        }

        .blog-table th {
            background-color: var(--primary);
            color: white;
            font-weight: 600;
        }

        .blog-table tbody tr:hover {
            background-color: rgba(107, 66, 38, 0.05);
        }

    .blog-img-cell {
        width: 80px;
    }

    .blog-table-img {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: var(--border-radius);
    }

    .no-table-img {
        width: 60px;
        height: 60px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #f5f0e8;
        border-radius: var(--border-radius);
        color: var(--gray);
        font-size: 24px;
    }

    .blog-title-cell {
        max-width: 300px;
    }

    .blog-table-title {
        font-weight: 600;
        color: var(--primary);
        display: block;
        margin-bottom: 5px;
    }

    .blog-table-excerpt {
        font-size: 14px;
        color: var(--gray);
        margin: 0;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .blog-actions-cell {
        width: 120px;
    }

    .blog-table-actions {
        display: flex;
        gap: 8px;
    }

    .btn-table-view, .btn-table-edit, .btn-table-delete {
        width: 32px;
        height: 32px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
        transition: var(--transition);
    }

    .btn-table-view {
        background-color: rgba(33, 150, 243, 0.1);
        color: var(--info);
    }

    .btn-table-edit {
        background-color: rgba(255, 152, 0, 0.1);
        color: var(--warning);
    }

    .btn-table-delete {
        background-color: rgba(244, 67, 54, 0.1);
        color: var(--danger);
    }

    .btn-table-view:hover {
        background-color: var(--info);
        color: white;
    }

    .btn-table-edit:hover {
        background-color: var(--warning);
        color: white;
    }

    .btn-table-delete:hover {
        background-color: var(--danger);
        color: white;
    }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 60px 20px;
        background-color: white;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        margin-bottom: 40px;
    }

    .empty-icon {
        font-size: 64px;
        color: var(--accent);
        margin-bottom: 20px;
    }

    .empty-state h3 {
        font-size: 24px;
        font-weight: 600;
        color: var(--primary);
        margin-bottom: 10px;
    }

    .empty-state p {
        color: var(--gray);
        margin-bottom: 20px;
        max-width: 400px;
        margin-left: auto;
        margin-right: auto;
    }

    .mt-3 {
        margin-top: 15px;
    }

    /* Pagination */
    .pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 40px;
    }

    .pagination-btn {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        border: 1px solid var(--gray-light);
        background-color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: var(--transition);
    }

        .pagination-btn:hover:not([disabled]) {
            background-color: var(--primary);
            color: white;
            border-color: var(--primary);
        }

        .pagination-btn[disabled] {
            opacity: 0.5;
            cursor: not-allowed;
        }

    .pagination-numbers {
        display: flex;
        margin: 0 10px;
    }

    .pagination-number {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        border: 1px solid var(--gray-light);
        background-color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 5px;
        cursor: pointer;
        transition: var(--transition);
    }

        .pagination-number:hover {
            background-color: rgba(107, 66, 38, 0.1);
        }

        .pagination-number.active {
            background-color: var(--primary);
            color: white;
            border-color: var(--primary);
        }

    
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // View toggle
        const gridViewBtn = document.getElementById('gridViewBtn');
        const listViewBtn = document.getElementById('listViewBtn');
        const gridView = document.getElementById('gridView');
        const listView = document.getElementById('listView');

        // Set initial view based on localStorage or default to grid
        const currentView = localStorage.getItem('blogViewMode') || 'grid';
        if (currentView === 'grid') {
            gridView.style.display = 'grid';
            listView.style.display = 'none';
            gridViewBtn.classList.add('active');
            listViewBtn.classList.remove('active');
        } else {
            gridView.style.display = 'none';
            listView.style.display = 'block';
            gridViewBtn.classList.remove('active');
            listViewBtn.classList.add('active');
        }

        // Grid view button click
        gridViewBtn.addEventListener('click', function() {
            gridView.style.display = 'grid';
            listView.style.display = 'none';
            gridViewBtn.classList.add('active');
            listViewBtn.classList.remove('active');
            localStorage.setItem('blogViewMode', 'grid');
        });

        // List view button click
        listViewBtn.addEventListener('click', function() {
            gridView.style.display = 'none';
            listView.style.display = 'block';
            gridViewBtn.classList.remove('active');
            listViewBtn.classList.add('active');
            localStorage.setItem('blogViewMode', 'list');
        });

        // Search functionality
        const searchInput = document.getElementById('searchBlog');
        const blogCards = document.querySelectorAll('.blog-card');
        const blogRows = document.querySelectorAll('.blog-table tbody tr');

        searchInput.addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase();

            // Search in grid view
            blogCards.forEach(card => {
                const blogName = card.querySelector('.blog-name').textContent.toLowerCase();
                const blogContent = card.querySelector('.blog-excerpt').textContent.toLowerCase();

                if (blogName.includes(searchTerm) || blogContent.includes(searchTerm)) {
                    card.style.display = '';
                } else {
                    card.style.display = 'none';
                }
            });

            // Search in list view
            blogRows.forEach(row => {
                const blogName = row.querySelector('.blog-table-title').textContent.toLowerCase();
                const blogContent = row.querySelector('.blog-table-excerpt')?.textContent.toLowerCase() || '';

                if (blogName.includes(searchTerm) || blogContent.includes(searchTerm)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        });

        // Close alerts if any
        const closeAlerts = document.querySelectorAll('.close-alert');
        closeAlerts.forEach(btn => {
            btn.addEventListener('click', function() {
                this.closest('.alert').style.display = 'none';
            });
        });
    });
</script>