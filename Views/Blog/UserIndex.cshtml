@model IEnumerable<TheCoffeeShop.Models.Blog>

@{
    ViewData["Title"] = "Blog Cà Phê";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="user-blog-container">
    <!-- Hero Section -->
    <div class="blog-hero">
        <div class="hero-content">
            <h1 class="hero-title">Blog Cà Phê</h1>
            <p class="hero-subtitle">Khám phá thế giới cà phê qua những câu chuyện, bí quyết và kiến thức thú vị</p>
            <div class="hero-search">
                <input type="text" id="blogSearch" placeholder="Tìm kiếm bài viết...">
                <button type="button" class="search-btn">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </div>
    </div>

    <!-- Featured Posts -->
    @if (Model.Any())
    {
        var featuredPost = Model.OrderByDescending(b => b.BlogDate).FirstOrDefault();
        if (featuredPost != null)
        {
            <div class="featured-post">
                <div class="featured-content">
                    <div class="featured-image">
                        @if (!string.IsNullOrEmpty(featuredPost.BlogImage))
                        {
                            <img src="@featuredPost.BlogImage" alt="@featuredPost.BlogName">
                        }
                        else
                        {
                            <div class="no-image">
                                <i class="fas fa-newspaper"></i>
                            </div>
                        }
                    </div>
                    <div class="featured-info">
                        <div class="featured-meta">
                            <span class="featured-label">Bài viết nổi bật</span>
                            @if (featuredPost.BlogDate.HasValue)
                            {
                                <span class="featured-date">
                                    <i class="far fa-calendar-alt"></i> @featuredPost.BlogDate.Value.ToString("dd/MM/yyyy")
                                </span>
                            }
                            @if (featuredPost.Account != null)
                            {
                                <span class="featured-author">
                                    <i class="far fa-user"></i> @featuredPost.Account.UserName
                                </span>
                            }
                        </div>
                        <h2 class="featured-title">@featuredPost.BlogName</h2>
                        <p class="featured-excerpt">
                            @if (!string.IsNullOrEmpty(featuredPost.BlogContent))
                            {
                                @(featuredPost.BlogContent.Length > 200 ? featuredPost.BlogContent.Substring(0, 200) + "..." : featuredPost.BlogContent)
                            }
                        </p>
                        <a href="@Url.Action("UserBlogDetails", new { id = featuredPost.BlogId })" class="btn-read-more">
                            Đọc tiếp <i class="fas fa-arrow-right"></i>
                        </a>
                    </div>
                </div>
            </div>
        }
    }

    <!-- Blog Categories -->
    <div class="blog-categories">
        <div class="category-header">
            <h2>Chủ đề</h2>
        </div>
        <div class="category-list">
            <button class="category-item active" data-category="all">Tất cả</button>
            <button class="category-item" data-category="coffee-knowledge">Kiến thức cà phê</button>
            <button class="category-item" data-category="brewing-methods">Phương pháp pha chế</button>
            <button class="category-item" data-category="coffee-culture">Văn hóa cà phê</button>
            <button class="category-item" data-category="recipes">Công thức</button>
        </div>
    </div>

    <!-- Blog Posts -->
    <div class="blog-posts">
        <div class="posts-header">
            <h2>Bài viết mới nhất</h2>
            <div class="posts-view-options">
                <button id="gridViewBtn" class="view-option active">
                    <i class="fas fa-th-large"></i>
                </button>
                <button id="listViewBtn" class="view-option">
                    <i class="fas fa-list"></i>
                </button>
            </div>
        </div>

        <!-- Grid View -->
        <div id="postsGridView" class="posts-grid">
            @foreach (var blog in Model)
            {
                <div class="blog-card" data-category="all">
                    <div class="card-image">
                        @if (!string.IsNullOrEmpty(blog.BlogImage))
                        {
                            <img src="@blog.BlogImage" alt="@blog.BlogName">
                        }
                        else
                        {
                            <div class="no-image">
                                <i class="fas fa-coffee"></i>
                            </div>
                        }
                        @if (blog.BlogDate.HasValue)
                        {
                            <div class="card-date">
                                <span class="date-day">@blog.BlogDate.Value.Day</span>
                                <span class="date-month">@blog.BlogDate.Value.ToString("MMM")</span>
                            </div>
                        }
                    </div>
                    <div class="card-content">
                        <h3 class="card-title">@blog.BlogName</h3>
                        <div class="card-meta">
                            @if (blog.Account != null)
                            {
                                <span class="meta-author">
                                    <i class="far fa-user"></i> @blog.Account.UserName
                                </span>
                            }
                            @if (blog.Product != null)
                            {
                                <span class="meta-product">
                                    <i class="fas fa-coffee"></i> @blog.Product.ProductName
                                </span>
                            }
                        </div>
                        <p class="card-excerpt">
                            @if (!string.IsNullOrEmpty(blog.BlogContent))
                            {
                                @(blog.BlogContent.Length > 120 ? blog.BlogContent.Substring(0, 120) + "..." : blog.BlogContent)
                            }
                        </p>
                        <a href="@Url.Action("UserBlogDetails", new { id = blog.BlogId })" class="card-read-more">
                            Đọc tiếp <i class="fas fa-long-arrow-alt-right"></i>
                        </a>
                    </div>
                </div>
            }
        </div>

        <!-- List View -->
        <div id="postsListView" class="posts-list" style="display: none;">
            @foreach (var blog in Model)
            {
                <div class="blog-list-item" data-category="all">
                    <div class="list-image">
                        @if (!string.IsNullOrEmpty(blog.BlogImage))
                        {
                            <img src="@blog.BlogImage" alt="@blog.BlogName">
                        }
                        else
                        {
                            <div class="no-image">
                                <i class="fas fa-coffee"></i>
                            </div>
                        }
                    </div>
                    <div class="list-content">
                        <h3 class="list-title">@blog.BlogName</h3>
                        <div class="list-meta">
                            @if (blog.BlogDate.HasValue)
                            {
                                <span class="meta-date">
                                    <i class="far fa-calendar-alt"></i> @blog.BlogDate.Value.ToString("dd/MM/yyyy")
                                </span>
                            }
                            @if (blog.Account != null)
                            {
                                <span class="meta-author">
                                    <i class="far fa-user"></i> @blog.Account.UserName
                                </span>
                            }
                            @if (blog.Product != null)
                            {
                                <span class="meta-product">
                                    <i class="fas fa-coffee"></i> @blog.Product.ProductName
                                </span>
                            }
                        </div>
                        <p class="list-excerpt">
                            @if (!string.IsNullOrEmpty(blog.BlogContent))
                            {
                                @(blog.BlogContent.Length > 180 ? blog.BlogContent.Substring(0, 180) + "..." : blog.BlogContent)
                            }
                        </p>
                        <a href="@Url.Action("UserBlogDetails", new { id = blog.BlogId })" class="list-read-more">
                            Đọc tiếp <i class="fas fa-long-arrow-alt-right"></i>
                        </a>
                    </div>
                </div>
            }
        </div>

        @if (!Model.Any())
        {
            <div class="no-posts">
                <div class="no-posts-icon">
                    <i class="fas fa-newspaper"></i>
                </div>
                <h3>Chưa có bài viết nào</h3>
                <p>Chúng tôi đang cập nhật nội dung. Vui lòng quay lại sau!</p>
            </div>
        }

        <!-- Pagination -->
        @if (Model.Count() > 6)
        {
            <div class="blog-pagination">
                <button class="pagination-prev" disabled>
                    <i class="fas fa-chevron-left"></i>
                </button>
                <div class="pagination-numbers">
                    <button class="pagination-number active">1</button>
                    <button class="pagination-number">2</button>
                    <button class="pagination-number">3</button>
                </div>
                <button class="pagination-next">
                    <i class="fas fa-chevron-right"></i>
                </button>
            </div>
        }
    </div>

    <!-- Newsletter Section -->
    <div class="blog-newsletter">
        <div class="newsletter-content">
            <div class="newsletter-icon">
                <i class="fas fa-envelope"></i>
            </div>
            <h2>Đăng ký nhận bài viết mới</h2>
            <p>Cập nhật những bài viết mới nhất về cà phê, khuyến mãi và sự kiện đặc biệt.</p>
            <form class="newsletter-form">
                <input type="email" placeholder="Email của bạn" required>
                <button type="submit">Đăng ký</button>
            </form>
        </div>
    </div>
</div>

<style>
    :root {
        --primary: #6b4226;
        --primary-light: #8c6242;
        --primary-dark: #4e301c;
        --secondary: #a67c52;
        --accent: #d4a762;
        --accent-light: #e9d2b3;
        --success: #4caf50;
        --warning: #ff9800;
        --danger: #f44336;
        --info: #2196f3;
        --dark: #333333;
        --light: #f5f5f5;
        --gray: #757575;
        --gray-light: #e0e0e0;
        --white: #ffffff;
        --shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        --border-radius: 8px;
        --transition: all 0.3s ease;
    }

    body {
        font-family: 'Poppins', sans-serif;
        background-color: #f9f5f0;
        color: var(--dark);
        line-height: 1.6;
    }

    .user-blog-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0;
    }

    /* Hero Section */
    .blog-hero {
        background: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('/images/coffee-beans-bg.jpg');
        background-size: cover;
        background-position: center;
        color: var(--white);
        padding: 100px 20px;
        text-align: center;
        margin-bottom: 60px;
        border-radius: 0 0 var(--border-radius) var(--border-radius);
    }

    .hero-content {
        max-width: 800px;
        margin: 0 auto;
    }

    .hero-title {
        font-size: 48px;
        font-weight: 700;
        margin-bottom: 20px;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
    }

    .hero-subtitle {
        font-size: 18px;
        margin-bottom: 30px;
        opacity: 0.9;
    }

    .hero-search {
        position: relative;
        max-width: 500px;
        margin: 0 auto;
    }

        .hero-search input {
            width: 100%;
            padding: 15px 20px;
            padding-right: 50px;
            border: none;
            border-radius: 30px;
            font-size: 16px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }

            .hero-search input:focus {
                outline: none;
            }

    .search-btn {
        position: absolute;
        right: 5px;
        top: 5px;
        background-color: var(--primary);
        color: white;
        border: none;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: var(--transition);
    }

        .search-btn:hover {
            background-color: var(--primary-dark);
        }

    /* Featured Post */
    .featured-post {
        margin: 0 20px 60px;
        background-color: var(--white);
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        overflow: hidden;
    }

    .featured-content {
        display: flex;
        flex-direction: row;
    }

    .featured-image {
        flex: 0 0 50%;
        position: relative;
        overflow: hidden;
    }

        .featured-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

    .featured-post:hover .featured-image img {
        transform: scale(1.05);
    }

    .no-image {
        width: 100%;
        height: 100%;
        background-color: var(--accent-light);
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--primary);
        font-size: 64px;
    }

    .featured-info {
        flex: 0 0 50%;
        padding: 40px;
        display: flex;
        flex-direction: column;
    }

    .featured-meta {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
        margin-bottom: 15px;
    }

    .featured-label {
        background-color: var(--accent);
        color: var(--primary-dark);
        padding: 5px 12px;
        border-radius: 20px;
        font-size: 14px;
        font-weight: 500;
    }

    .featured-date, .featured-author {
        color: var(--gray);
        font-size: 14px;
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .featured-title {
        font-size: 28px;
        font-weight: 700;
        color: var(--primary);
        margin-bottom: 15px;
        line-height: 1.3;
    }

    .featured-excerpt {
        color: var(--gray);
        margin-bottom: 25px;
        flex: 1;
    }

    .btn-read-more {
        align-self: flex-start;
        background-color: var(--primary);
        color: var(--white);
        padding: 12px 24px;
        border-radius: 30px;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        font-weight: 500;
        transition: var(--transition);
    }

        .btn-read-more:hover {
            background-color: var(--primary-dark);
            transform: translateY(-2px);
            color: var(--white);
        }

    /* Blog Categories */
    .blog-categories {
        margin: 0 20px 40px;
    }

    .category-header {
        margin-bottom: 20px;
    }

        .category-header h2 {
            font-size: 24px;
            font-weight: 600;
            color: var(--primary);
            position: relative;
            padding-bottom: 10px;
        }

            .category-header h2:after {
                content: '';
                position: absolute;
                bottom: 0;
                left: 0;
                width: 60px;
                height: 3px;
                background-color: var(--accent);
            }

    .category-list {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
    }

    .category-item {
        background-color: var(--white);
        border: 1px solid var(--gray-light);
        color: var(--gray);
        padding: 8px 16px;
        border-radius: 20px;
        cursor: pointer;
        transition: var(--transition);
        font-size: 14px;
    }

        .category-item:hover {
            background-color: var(--accent-light);
            color: var(--primary);
        }

        .category-item.active {
            background-color: var(--primary);
            color: var(--white);
            border-color: var(--primary);
        }

    /* Blog Posts */
    .blog-posts {
        margin: 0 20px 60px;
    }

    .posts-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
    }

        .posts-header h2 {
            font-size: 24px;
            font-weight: 600;
            color: var(--primary);
            position: relative;
            padding-bottom: 10px;
        }

            .posts-header h2:after {
                content: '';
                position: absolute;
                bottom: 0;
                left: 0;
                width: 60px;
                height: 3px;
                background-color: var(--accent);
            }

    .posts-view-options {
        display: flex;
        gap: 10px;
    }

    .view-option {
        width: 40px;
        height: 40px;
        border-radius: var(--border-radius);
        border: 1px solid var(--gray-light);
        background-color: var(--white);
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: var(--transition);
    }

        .view-option.active {
            background-color: var(--primary);
            color: var(--white);
            border-color: var(--primary);
        }

    /* Grid View */
    .posts-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 30px;
    }

    .blog-card {
        background-color: var(--white);
        border-radius: var(--border-radius);
        overflow: hidden;
        box-shadow: var(--shadow);
        transition: var(--transition);
        height: 100%;
        display: flex;
        flex-direction: column;
    }

        .blog-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

    .card-image {
        height: 200px;
        position: relative;
        overflow: hidden;
    }

        .card-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

    .blog-card:hover .card-image img {
        transform: scale(1.05);
    }

    .card-date {
        position: absolute;
        top: 15px;
        left: 15px;
        background-color: var(--primary);
        color: var(--white);
        padding: 8px 12px;
        border-radius: var(--border-radius);
        text-align: center;
        line-height: 1.2;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }

    .date-day {
        font-size: 18px;
        font-weight: 700;
        display: block;
    }

    .date-month {
        font-size: 12px;
        text-transform: uppercase;
    }

    .card-content {
        padding: 25px;
        flex: 1;
        display: flex;
        flex-direction: column;
    }

    .card-title {
        font-size: 18px;
        font-weight: 600;
        color: var(--primary);
        margin-bottom: 15px;
        line-height: 1.4;
    }

    .card-meta {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
        margin-bottom: 15px;
        font-size: 13px;
        color: var(--gray);
    }

    .meta-author, .meta-product, .meta-date {
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .card-excerpt {
        color: var(--gray);
        margin-bottom: 20px;
        font-size: 14px;
        flex: 1;
    }

    .card-read-more {
        color: var(--primary);
        text-decoration: none;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
        gap: 5px;
        font-size: 14px;
        transition: var(--transition);
        margin-top: auto;
    }

        .card-read-more:hover {
            color: var(--accent);
        }

    /* List View */
    .posts-list {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .blog-list-item {
        display: flex;
        background-color: var(--white);
        border-radius: var(--border-radius);
        overflow: hidden;
        box-shadow: var(--shadow);
        transition: var(--transition);
    }

        .blog-list-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

    .list-image {
        flex: 0 0 250px;
        position: relative;
        overflow: hidden;
    }

        .list-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

    .blog-list-item:hover .list-image img {
        transform: scale(1.05);
    }

    .list-content {
        flex: 1;
        padding: 25px;
        display: flex;
        flex-direction: column;
    }

    .list-title {
        font-size: 20px;
        font-weight: 600;
        color: var(--primary);
        margin-bottom: 10px;
        line-height: 1.4;
    }

    .list-meta {
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
        margin-bottom: 15px;
        font-size: 14px;
        color: var(--gray);
    }

    .list-excerpt {
        color: var(--gray);
        margin-bottom: 15px;
        flex: 1;
    }

    .list-read-more {
        color: var(--primary);
        text-decoration: none;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
        gap: 5px;
        transition: var(--transition);
        align-self: flex-start;
    }

        .list-read-more:hover {
            color: var(--accent);
        }

    /* No Posts */
    .no-posts {
        text-align: center;
        padding: 60px 20px;
        background-color: var(--white);
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
    }

    .no-posts-icon {
        font-size: 64px;
        color: var(--accent);
        margin-bottom: 20px;
    }

    .no-posts h3 {
        font-size: 24px;
        font-weight: 600;
        color: var(--primary);
        margin-bottom: 10px;
    }

    .no-posts p {
        color: var(--gray);
        max-width: 400px;
        margin: 0 auto;
    }

    /* Pagination */
    .blog-pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 40px;
    }

    .pagination-prev, .pagination-next {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        border: 1px solid var(--gray-light);
        background-color: var(--white);
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: var(--transition);
    }

        .pagination-prev:hover:not([disabled]), .pagination-next:hover:not([disabled]) {
            background-color: var(--primary);
            color: var(--white);
            border-color: var(--primary);
        }

        .pagination-prev[disabled], .pagination-next[disabled] {
            opacity: 0.5;
            cursor: not-allowed;
        }

    .pagination-numbers {
        display: flex;
        margin: 0 10px;
    }

    .pagination-number {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        border: 1px solid var(--gray-light);
        background-color: var(--white);
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 5px;
        cursor: pointer;
        transition: var(--transition);
    }

        .pagination-number:hover {
            background-color: rgba(107, 66, 38, 0.1);
        }

        .pagination-number.active {
            background-color: var(--primary);
            color: var(--white);
            border-color: var(--primary);
        }

    /* Newsletter */
    .blog-newsletter {
        background-color: var(--primary);
        color: var(--white);
        padding: 60px 20px;
        margin: 0 20px 60px;
        border-radius: var(--border-radius);
        text-align: center;
    }

    .newsletter-content {
        max-width: 600px;
        margin: 0 auto;
    }

    .newsletter-icon {
        font-size: 48px;
        margin-bottom: 20px;
        color: var(--accent);
    }

    .blog-newsletter h2 {
        font-size: 28px;
        font-weight: 600;
        margin-bottom: 15px;
    }

    .blog-newsletter p {
        margin-bottom: 30px;
        opacity: 0.9;
    }

    .newsletter-form {
        display: flex;
        max-width: 500px;
        margin: 0 auto;
    }

        .newsletter-form input {
            flex: 1;
            padding: 15px 20px;
            border: none;
            border-radius: 30px 0 0 30px;
            font-size: 16px;
        }

            .newsletter-form input:focus {
                outline: none;
            }

        .newsletter-form button {
            background-color: var(--accent);
            color: var(--primary-dark);
            border: none;
            padding: 0 30px;
            border-radius: 0 30px 30px 0;
            font-weight: 600;
            cursor: pointer;
            transition: var(--transition);
        }

            .newsletter-form button:hover {
                background-color: var(--accent-light);
            }

    

    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // View toggle
        const gridViewBtn = document.getElementById('gridViewBtn');
        const listViewBtn = document.getElementById('listViewBtn');
        const postsGridView = document.getElementById('postsGridView');
        const postsListView = document.getElementById('postsListView');

        // Set initial view based on localStorage or default to grid
        const currentView = localStorage.getItem('userBlogViewMode') || 'grid';
        if (currentView === 'grid') {
            postsGridView.style.display = 'grid';
            postsListView.style.display = 'none';
            gridViewBtn.classList.add('active');
            listViewBtn.classList.remove('active');
        } else {
            postsGridView.style.display = 'none';
            postsListView.style.display = 'flex';
            gridViewBtn.classList.remove('active');
            listViewBtn.classList.add('active');
        }

        // Grid view button click
        gridViewBtn.addEventListener('click', function() {
            postsGridView.style.display = 'grid';
            postsListView.style.display = 'none';
            gridViewBtn.classList.add('active');
            listViewBtn.classList.remove('active');
            localStorage.setItem('userBlogViewMode', 'grid');
        });

        // List view button click
        listViewBtn.addEventListener('click', function() {
            postsGridView.style.display = 'none';
            postsListView.style.display = 'flex';
            gridViewBtn.classList.remove('active');
            listViewBtn.classList.add('active');
            localStorage.setItem('userBlogViewMode', 'list');
        });

        // Category filter
        const categoryButtons = document.querySelectorAll('.category-item');
        const blogCards = document.querySelectorAll('.blog-card');
        const blogListItems = document.querySelectorAll('.blog-list-item');

        categoryButtons.forEach(button => {
            button.addEventListener('click', function() {
                const category = this.getAttribute('data-category');

                // Update active button
                categoryButtons.forEach(btn => btn.classList.remove('active'));
                this.classList.add('active');

                // Filter grid items
                if (category === 'all') {
                    blogCards.forEach(card => card.style.display = '');
                    blogListItems.forEach(item => item.style.display = '');
                } else {
                    blogCards.forEach(card => {
                        if (card.getAttribute('data-category') === category) {
                            card.style.display = '';
                        } else {
                            card.style.display = 'none';
                        }
                    });

                    blogListItems.forEach(item => {
                        if (item.getAttribute('data-category') === category) {
                            item.style.display = '';
                        } else {
                            item.style.display = 'none';
                        }
                    });
                }
            });
        });

        // Search functionality
        const searchInput = document.getElementById('blogSearch');

        searchInput.addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase();

            // Search in grid view
            blogCards.forEach(card => {
                const title = card.querySelector('.card-title').textContent.toLowerCase();
                const excerpt = card.querySelector('.card-excerpt').textContent.toLowerCase();

                if (title.includes(searchTerm) || excerpt.includes(searchTerm)) {
                    card.style.display = '';
                } else {
                    card.style.display = 'none';
                }
            });

            // Search in list view
            blogListItems.forEach(item => {
                const title = item.querySelector('.list-title').textContent.toLowerCase();
                const excerpt = item.querySelector('.list-excerpt').textContent.toLowerCase();

                if (title.includes(searchTerm) || excerpt.includes(searchTerm)) {
                    item.style.display = '';
                } else {
                    item.style.display = 'none';
                }
            });
        });

        // Newsletter form
        const newsletterForm = document.querySelector('.newsletter-form');

        if (newsletterForm) {
            newsletterForm.addEventListener('submit', function(e) {
                e.preventDefault();
                const email = this.querySelector('input').value;

                if (email) {
                    alert('Cảm ơn bạn đã đăng ký! Chúng tôi sẽ gửi bài viết mới nhất đến ' + email);
                    this.reset();
                }
            });
        }

        // Pagination
        const paginationNumbers = document.querySelectorAll('.pagination-number');
        const paginationPrev = document.querySelector('.pagination-prev');
        const paginationNext = document.querySelector('.pagination-next');

        if (paginationNumbers.length > 0) {
            paginationNumbers.forEach((btn, index) => {
                btn.addEventListener('click', function() {
                    paginationNumbers.forEach(b => b.classList.remove('active'));
                    this.classList.add('active');

                    // Enable/disable prev/next buttons
                    if (index === 0) {
                        paginationPrev.setAttribute('disabled', true);
                    } else {
                        paginationPrev.removeAttribute('disabled');
                    }

                    if (index === paginationNumbers.length - 1) {
                        paginationNext.setAttribute('disabled', true);
                    } else {
                        paginationNext.removeAttribute('disabled');
                    }

                    // In a real app, you'd load the appropriate page here
                });
            });

            if (paginationPrev) {
                paginationPrev.addEventListener('click', function() {
                    const activeBtn = document.querySelector('.pagination-number.active');
                    const prevBtn = activeBtn.previousElementSibling;

                    if (prevBtn) {
                        prevBtn.click();
                    }
                });
            }

            if (paginationNext) {
                paginationNext.addEventListener('click', function() {
                    const activeBtn = document.querySelector('.pagination-number.active');
                    const nextBtn = activeBtn.nextElementSibling;

                    if (nextBtn) {
                        nextBtn.click();
                    }
                });
            }
        }
    });
</script>