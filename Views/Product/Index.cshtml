@model IEnumerable<TheCoffeeShop.Models.Product>

@{
    ViewData["Title"] = "Danh sách sản phẩm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* Màu sắc chủ đạo */
    :root {
        --primary: #6b4226;
        --secondary: #a67c52;
        --accent: #d4a762;
        --light: #f5f0e8;
        --dark: #3c2415;
        --bg: #fcfaf7;
    }

    /* Reset và style cơ bản */
    body {
        background-color: var(--bg);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px 15px;
    }

    /* Header */
    .page-header {
        margin-bottom: 30px;
        text-align: center;
    }

    .page-title {
        color: var(--dark);
        font-size: 28px;
        font-weight: bold;
        margin-bottom: 10px;
    }

    /* Control Panel */
    .control-panel {
        background-color: white;
        border-radius: 8px;
        padding: 20px;
        margin-bottom: 30px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    /* Buttons */
    .btn-primary {
        background-color: var(--primary);
        border-color: var(--primary);
        color: white;
    }

        .btn-primary:hover {
            background-color: var(--dark);
            border-color: var(--dark);
        }

    .btn-info {
        background-color: #17a2b8;
        border-color: #17a2b8;
        color: white;
    }

    .btn-danger {
        background-color: #dc3545;
        border-color: #dc3545;
    }

    /* Search Box */
    .search-box {
        position: relative;
        max-width: 300px;
    }

    .search-input {
        border-radius: 20px;
        padding-right: 40px;
        border: 1px solid #ddd;
    }

    .search-btn {
        position: absolute;
        right: 0;
        top: 0;
        height: 100%;
        width: 40px;
        border: none;
        background: none;
        color: var(--primary);
    }

    /* Filter Select */
    .filter-select {
        border-radius: 4px;
        border: 1px solid #ddd;
    }

    /* View Toggle */
    .view-toggle {
        display: flex;
        gap: 10px;
    }

    .view-btn {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 4px;
        background-color: white;
        border: 1px solid #ddd;
        color: var(--primary);
        cursor: pointer;
    }

        .view-btn.active {
            background-color: var(--primary);
            color: white;
            border-color: var(--primary);
        }

    /* Grid View */
    .products-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .product-card {
        background-color: white;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }

        .product-card:hover {
            transform: translateY(-5px);
        }

    .product-image-container {
        height: 180px;
        overflow: hidden;
        position: relative;
        background-color: var(--light);
    }

    .product-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .product-category {
        position: absolute;
        top: 10px;
        left: 10px;
        background-color: rgba(60, 36, 21, 0.8);
        color: white;
        padding: 5px 10px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: bold;
    }

    .product-content {
        padding: 15px;
    }

    .product-name {
        font-size: 16px;
        font-weight: bold;
        color: var(--dark);
        margin-bottom: 8px;
        height: 40px;
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }

    .product-price {
        font-size: 18px;
        font-weight: bold;
        color: var(--secondary);
        margin-bottom: 15px;
    }

    .product-actions {
        display: flex;
        gap: 5px;
    }

    .btn-action {
        flex: 1;
        padding: 8px;
        border-radius: 4px;
        text-align: center;
        color: white;
        text-decoration: none;
        font-size: 14px;
    }

    .btn-edit {
        background-color: #17a2b8;
    }

    .btn-view {
        background-color: var(--secondary);
    }

    .btn-delete {
        background-color: #dc3545;
    }

    .btn-action:hover {
        opacity: 0.9;
        color: white;
    }

    /* Table View */
    .products-table {
        width: 100%;
        border-collapse: collapse;
        background-color: white;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 30px;
    }

        .products-table th {
            background-color: var(--primary);
            color: white;
            padding: 15px;
            text-align: left;
        }

        .products-table td {
            padding: 15px;
            border-top: 1px solid #eee;
        }

        .products-table tr:hover {
            background-color: var(--light);
        }

    .table-img {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 4px;
    }

    /* Pagination */
    .pagination {
        margin-top: 30px;
    }

    .page-link {
        color: var(--primary);
        border-color: #ddd;
    }

    .page-item.active .page-link {
        background-color: var(--primary);
        border-color: var(--primary);
    }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 50px 20px;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .empty-icon {
        font-size: 48px;
        color: var(--secondary);
        margin-bottom: 20px;
    }

   

    }
</style>

<div class="container">
    <div class="page-header">
        <h1 class="page-title">Danh sách sản phẩm</h1>
    </div>

    <div class="control-panel">
        <div class="d-flex justify-content-between align-items-center flex-wrap gap-3">
            <a asp-action="Create" class="btn btn-primary">
                <i class="fa fa-plus"></i> Thêm mới
            </a>

            <div class="d-flex align-items-center flex-wrap gap-3">
                <form asp-action="Index" method="get" class="search-box">
                    <input type="text" name="searchString" class="form-control search-input" placeholder="Tìm kiếm..." value="@ViewBag.CurrentFilter" />
                    <button type="submit" class="search-btn">
                        <i class="fa fa-search"></i>
                    </button>
                </form>

                <select name="categoryId" id="categoryFilter" class="form-control filter-select ms-3"
                        onchange="window.location.href = '@Url.Action("Index")?categoryId=' + this.value + '&searchString=@ViewBag.CurrentFilter&sortOrder=@ViewBag.CurrentSort&page=@ViewBag.CurrentPage'">
                    <option value="">Tất cả danh mục</option>
                </select>

                <div class="view-toggle ms-3">
                    <button type="button" class="view-btn active" id="gridViewBtn" title="Xem dạng lưới">
                        <i class="fa fa-th"></i>
                    </button>
                    <button type="button" class="view-btn" id="listViewBtn" title="Xem dạng bảng">
                        <i class="fa fa-list"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="empty-state">
            <div class="empty-icon">
                <i class="fa fa-coffee"></i>
            </div>
            <h3>Không tìm thấy sản phẩm nào</h3>
            <p>Hiện tại chưa có sản phẩm nào trong danh mục này hoặc phù hợp với tìm kiếm của bạn.</p>
            <a asp-action="Create" class="btn btn-primary mt-3">
                <i class="fa fa-plus"></i> Thêm sản phẩm mới
            </a>
        </div>
    }
    else
    {
        <!-- Grid View -->
        <div class="products-grid" id="gridView">
            @foreach (var item in Model)
            {
                <div class="product-card">
                    <div class="product-image-container">
                        @if (!string.IsNullOrEmpty(item.ProductImage))
                        {
                            <img src="@item.ProductImage" alt="@item.ProductName" class="product-image" />
                        }
                        else
                        {
                            <div class="d-flex align-items-center justify-content-center h-100 bg-light">
                                <i class="fa fa-image me-2"></i> Không có ảnh
                            </div>
                        }
                        <div class="product-category">
                            @Html.DisplayFor(modelItem => item.Category.CategoryName)
                        </div>
                    </div>
                    <div class="product-content">
                        <h3 class="product-name">@Html.DisplayFor(modelItem => item.ProductName)</h3>
                        <div class="product-price">@Html.DisplayFor(modelItem => item.ProductPrice) đ</div>
                        <div class="product-actions">
                            <a asp-action="Edit" asp-route-id="@item.ProductId" class="btn-action btn-edit" title="Chỉnh sửa">
                                <i class="fa fa-edit"></i>
                            </a>
                            <a asp-action="Details" asp-route-id="@item.ProductId" class="btn-action btn-view" title="Chi tiết">
                                <i class="fa fa-info-circle"></i>
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.ProductId" class="btn-action btn-delete" title="Xóa">
                                <i class="fa fa-trash"></i>
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Table View -->
        <table class="products-table" id="tableView">
            <thead>
                <tr>
                    <th>
                        <a class="text-white text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewBag.NameSortParam"
                           asp-route-searchString="@ViewBag.CurrentFilter"
                           asp-route-categoryId="@ViewBag.SelectedCategory">
                            Tên sản phẩm
                            @if (ViewBag.CurrentSort == "name_asc")
                            {
                                <i class="fa fa-sort-up"></i>
                            }
                            else if (ViewBag.CurrentSort == "name_desc")
                            {
                                <i class="fa fa-sort-down"></i>
                            }
                            else
                            {
                                <i class="fa fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th>Hình ảnh</th>
                    <th>
                        <a class="text-white text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewBag.CategorySortParam"
                           asp-route-searchString="@ViewBag.CurrentFilter"
                           asp-route-categoryId="@ViewBag.SelectedCategory">
                            Danh mục
                            @if (ViewBag.CurrentSort == "category_asc")
                            {
                                <i class="fa fa-sort-up"></i>
                            }
                            else if (ViewBag.CurrentSort == "category_desc")
                            {
                                <i class="fa fa-sort-down"></i>
                            }
                            else
                            {
                                <i class="fa fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th>
                        <a class="text-white text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewBag.PriceSortParam"
                           asp-route-searchString="@ViewBag.CurrentFilter"
                           asp-route-categoryId="@ViewBag.SelectedCategory">
                            Giá
                            @if (ViewBag.CurrentSort == "price_asc")
                            {
                                <i class="fa fa-sort-up"></i>
                            }
                            else if (ViewBag.CurrentSort == "price_desc")
                            {
                                <i class="fa fa-sort-down"></i>
                            }
                            else
                            {
                                <i class="fa fa-sort"></i>
                            }
                        </a>
                    </th>
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <span class="fw-bold">@Html.DisplayFor(modelItem => item.ProductName)</span>
                        </td>
                        <td>
                            @if (!string.IsNullOrEmpty(item.ProductImage))
                            {
                                <img src="@item.ProductImage" alt="@item.ProductName" class="table-img" />
                            }
                            else
                            {
                                <span class="badge bg-secondary">Không có ảnh</span>
                            }
                        </td>
                        <td>
                            <span class="badge bg-light text-dark">@Html.DisplayFor(modelItem => item.Category.CategoryName)</span>
                        </td>
                        <td>
                            <span class="fw-bold text-secondary">@Html.DisplayFor(modelItem => item.ProductPrice) đ</span>
                        </td>
                        <td>
                            <div class="d-flex gap-1">
                                <a asp-action="Edit" asp-route-id="@item.ProductId" class="btn btn-sm btn-info">
                                    <i class="fa fa-edit"></i>
                                </a>
                                <a asp-action="Details" asp-route-id="@item.ProductId" class="btn btn-sm btn-primary">
                                    <i class="fa fa-info-circle"></i>
                                </a>
                                <a asp-action="Delete" asp-route-id="@item.ProductId" class="btn btn-sm btn-danger">
                                    <i class="fa fa-trash"></i>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Pagination -->
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                @if (ViewBag.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index"
                           asp-route-page="@(ViewBag.CurrentPage - 1)"
                           asp-route-sortOrder="@ViewBag.CurrentSort"
                           asp-route-searchString="@ViewBag.CurrentFilter"
                           asp-route-categoryId="@ViewBag.SelectedCategory">
                            <i class="fa fa-chevron-left"></i> Trước
                        </a>
                    </li>
                }

                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="Index"
                           asp-route-page="@i"
                           asp-route-sortOrder="@ViewBag.CurrentSort"
                           asp-route-searchString="@ViewBag.CurrentFilter"
                           asp-route-categoryId="@ViewBag.SelectedCategory">
                            @i
                        </a>
                    </li>
                }

                @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index"
                           asp-route-page="@(ViewBag.CurrentPage + 1)"
                           asp-route-sortOrder="@ViewBag.CurrentSort"
                           asp-route-searchString="@ViewBag.CurrentFilter"
                           asp-route-categoryId="@ViewBag.SelectedCategory">
                            Tiếp <i class="fa fa-chevron-right"></i>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const gridViewBtn = document.getElementById('gridViewBtn');
        const listViewBtn = document.getElementById('listViewBtn');
        const gridView = document.getElementById('gridView');
        const tableView = document.getElementById('tableView');

        // Set initial view based on localStorage or default to grid
        const currentView = localStorage.getItem('productViewMode') || 'grid';
        if (currentView === 'grid') {
            gridView.style.display = 'grid';
            tableView.style.display = 'none';
            gridViewBtn.classList.add('active');
            listViewBtn.classList.remove('active');
        } else {
            gridView.style.display = 'none';
            tableView.style.display = 'table';
            gridViewBtn.classList.remove('active');
            listViewBtn.classList.add('active');
        }

        // Grid view button click
        gridViewBtn.addEventListener('click', function() {
            gridView.style.display = 'grid';
            tableView.style.display = 'none';
            gridViewBtn.classList.add('active');
            listViewBtn.classList.remove('active');
            localStorage.setItem('productViewMode', 'grid');
        });

        // List view button click
        listViewBtn.addEventListener('click', function() {
            gridView.style.display = 'none';
            tableView.style.display = 'table';
            gridViewBtn.classList.remove('active');
            listViewBtn.classList.add('active');
            localStorage.setItem('productViewMode', 'list');
        });

        // Set selected category
        const categoryFilter = document.getElementById('categoryFilter');
        if (categoryFilter) {
            const selectedCategory = '@ViewBag.SelectedCategory';
            if (selectedCategory) {
                categoryFilter.value = selectedCategory;
            }
        }
    });
</script>